---
source: tests/command_tests.rs
info:
  program: artifacts
  args:
    - "--log-level=debug"
    - generate
    - /home/palo/dev/artifacts/nixos-artifacts/pkgs/artifacts-cli/examples/artifact_names
    - "--machine=machine-name"
  env:
    NIXOS_ARTIFACTS_BACKEND_CONFIG: /home/palo/dev/artifacts/nixos-artifacts/pkgs/artifacts-cli/examples/artifact_names/backend.toml
    TMPDIR: /tmp/artifacts-cli
  stdin: ""
---
success: true
exit_code: 0
----- stdout -----
DEBUG: Running nix build: "/run/current-system/sw/bin/nix" "build" "--impure" "-I" "flake=/home/palo/dev/artifacts/nixos-artifacts/pkgs/artifacts-cli/examples/artifact_names" "--no-link" "--print-out-paths" "--expr" "\nlet\n  system = \"x86_64-linux\";\n  filterAttrs =\n    pred: set:\n    builtins.removeAttrs set (builtins.filter (name: !pred name set.${name}) (builtins.attrNames set));\n  flake = builtins.getFlake (toString <flake>);\n  pkgs = flake.inputs.nixpkgs.legacyPackages.${system};\n  configurations = builtins.attrNames (\n    filterAttrs (\n      machine: configuration: builtins.hasAttr \"artifacts\" configuration.options\n    ) flake.nixosConfigurations\n  );\n  make = map (name: {\n    machine = name;\n    artifacts = flake.nixosConfigurations.${name}.config.artifacts.store;\n    config =\n      if (builtins.hasAttr \"config\" flake.nixosConfigurations.${name}.config.artifacts) then\n        flake.nixosConfigurations.${name}.config.artifacts.config\n      else\n        { };\n  }) configurations;\nin\npkgs.writeText \"test.json\" (builtins.toJSON make)\n"
DEBUG: make config: [{"artifacts":{"artifact.one":{"files":{"fifth secret":{"group":"root","mode":"0400","name":"fifth secret","owner":"root","path":"/run/secrets/fifth secret"},"first.secret":{"group":"root","mode":"0400","name":"first.secret","owner":"root","path":"/run/secrets/first.secret"},"forthSecret":{"group":"root","mode":"0400","name":"forthSecret","owner":"root","path":"/run/secrets/forthSecret"},"second_secret":{"group":"root","mode":"0400","name":"second_secret","owner":"root","path":"/run/secrets/second_secret"},"third-secret":{"group":"root","mode":"0400","name":"third-secret","owner":"root","path":"/run/secrets/third-secret"}},"generator":"/nix/store/wyn91y3kama2cm6pmlf997y49dvb42lh-test_generator.sh","name":"artifact.one","prompts":{},"serialization":"test","shared":false}},"config":{},"machine":"machine-name"}]
[generate]
DEBUG:     files to produce -> 5 files
DEBUG:       - fifth secret => /run/secrets/fifth secret owner=root group=root
DEBUG:       - first.secret => /run/secrets/first.secret owner=root group=root
DEBUG:       - forthSecret => /run/secrets/forthSecret owner=root group=root
DEBUG:       - second_secret => /run/secrets/second_secret owner=root group=root
DEBUG:       - third-secret => /run/secrets/third-secret owner=root group=root
DEBUG:     running check_serialization: env inputs="/tmp/artifacts-cli/inputs-artifact.one" machine="machine-name" artifact="artifact.one" /home/palo/dev/artifacts/nixos-artifacts/pkgs/artifacts-cli/examples/artifact_names/test_check.sh
fifth secret
first.secret
forthSecret
second_secret
third-secret
DEBUG:     check_serialization: failed with status exit status: 1 -> continuing with generation
âš¡ machine-name/artifact.one
DEBUG: bwrap command: bwrap --unshare-all --unshare-user --uid 1000 --gid 1000 --tmpfs / --chdir / --ro-bind /nix/store /nix/store --tmpfs /usr/lib/systemd --proc /proc --dev /dev --bind /tmp/artifacts-cli/prompt-artifact.one /tmp/artifacts-cli/prompt-artifact.one --bind /tmp/artifacts-cli/out-artifact.one /tmp/artifacts-cli/out-artifact.one --ro-bind /nix/store/v36iinbhvz4rn84skvzg7d3qbmr800k4-test_generator.sh/bin /nix/store/v36iinbhvz4rn84skvzg7d3qbmr800k4-test_generator.sh/bin --ro-bind /bin /bin --ro-bind /usr/bin /usr/bin --ro-bind /tmp/artifacts-cli/artifacts-cli-passwd-70cab021bfe35e1e.txt /etc/passwd -- /bin/sh /nix/store/v36iinbhvz4rn84skvzg7d3qbmr800k4-test_generator.sh/bin/test_generator.sh
ðŸ’¾ serialize secrets
=== Content of /tmp/artifacts-cli/out-artifact.one/fifth secret ===
test
=========================
=== Content of /tmp/artifacts-cli/out-artifact.one/first.secret ===
test
=========================
=== Content of /tmp/artifacts-cli/out-artifact.one/forthSecret ===
test
=========================
=== Content of /tmp/artifacts-cli/out-artifact.one/second_secret ===
test
=========================
=== Content of /tmp/artifacts-cli/out-artifact.one/third-secret ===
test
=========================

----- stderr -----
